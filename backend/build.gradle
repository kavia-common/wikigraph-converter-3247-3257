plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'com.example'
version = '0.1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// HTML parsing
	implementation 'org.jsoup:jsoup:1.18.1'
	// Neo4j Java Driver for writing graph data
	implementation 'org.neo4j.driver:neo4j-java-driver:5.25.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	// Use a stable Checkstyle version compatible with Gradle 8.x
	toolVersion = '10.12.4'
	// Do not fail the build on violations to keep focus on functionality
	ignoreFailures = true
	// Use the default Sun checks if no config provided
	config = resources.text.fromString('''
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
  <module name="TreeWalker">
    <module name="EmptyBlock"/>
  </module>
</module>
''')
}
